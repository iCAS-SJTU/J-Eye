layer {
  name: "data"
  type: "DrivingData2"
  top: "data"
  top: "labels"
  data_param {
    source: "../../data/train/widerface_train_lmdb"
    backend: LMDB
    batch_size:260
  }
  transform_param {
    mean_value: 128 
    crop_size: 320
    mirror: true
    #scale: 0.00390625
    #force_gray: true
  }
  include { 
    phase: TRAIN 
  }
}

layer{
  name: "reshape-label"
  type: "ReshapeLabel"
  bottom: "labels"
  top: "pixel-label-3"
  top: "pixel-label-2"
  top: "pixel-label-1"
  top: "label"
  top: "unuse"
}

layer{
  name: "silence"
  type: "Silence"
  bottom: "pixel-label-3"
  bottom: "pixel-label-2"
  bottom: "pixel-label-1"
  bottom: "unuse"
}

# Split label layer into pixel and bounding box label.
layer {
  name: "slice-label"
  type: "Slice"
  bottom: "label"
  top: "pixel-label"
  top: "bb-label"
  top: "size-label"
  top: "norm-label"
  slice_param {
    slice_dim: 1
    slice_point: 1
    slice_point: 5
    slice_point: 7
  }
}

# Concatenate the pixel labels 4 folds such that it can be used to mask
# all 4 dimensions of the bounding box predictions.
#layer {
#  name: "pixel-block"
#  type: "Concat"
#  bottom: "pixel-label"
#  bottom: "pixel-label"
#  bottom: "pixel-label"
#  bottom: "pixel-label"
#  top: "pixel-block"
#  concat_param {
#    concat_dim: 1
#  }
#}

layer {
  name: "size-block"
  type: "Concat"
  bottom: "size-label"
  bottom: "size-label"
  top: "size-block"
  concat_param {
    concat_dim: 1
  }
}

layer {
  name: "norm-block"
  type: "Concat"
  bottom: "norm-label"
  bottom: "norm-label"
  bottom: "norm-label"
  bottom: "norm-label"
  top: "norm-block"
  concat_param {
    concat_dim: 1
  }
}

layer {
  name: "bb-label-size-normalization"
  type: "Eltwise"
  bottom: "bb-label"
  bottom: "size-block"
  top: "bb-label-sn"
  eltwise_param {
    operation: PROD
  }
}

layer {
  name: "bb-label-num-pixel-normalization"
  type: "Eltwise"
  bottom: "bb-label-sn"
  bottom: "norm-block"
  top: "bb-label-sn-nn"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "L0"
  type: "Convolution"
  bottom: "data"
  top: "L0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L0_bn"
  type: "BatchNorm"
  bottom: "L0"
  top: "L0_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu1"
  type: "ReLU"
  bottom: "L0_bn"
  top: "L0_bn"
}
layer {
  name: "L0_1"
  type: "Convolution"
  bottom: "L0_bn"
  top: "L0_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    pad: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L0_1_bn"
  type: "BatchNorm"
  bottom: "L0_1"
  top: "L0_1_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "L0_1_bn"
  top: "L0_1_bn"
}


layer {
  name: "cp1"
  type: "Convolution"
  bottom: "L0_1_bn"
  top: "cp1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "cp1_bn"
  type: "BatchNorm"
  bottom: "cp1"
  top: "cp1_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "relu_cp1"
  type: "ReLU"
  bottom: "cp1_bn"
  top: "cp1_bn"
}

layer {
  name: "L1"
  type: "Convolution"
  bottom: "cp1_bn"
  top: "L1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L1_bn"
  type: "BatchNorm"
  bottom: "L1"
  top: "L1_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "relu2"
  type: "ReLU"
  bottom: "L1_bn"
  top: "L1_bn"
}



layer {
  name: "cp2"
  type: "Convolution"
  bottom: "L1_bn"
  top: "cp2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "cp2_bn"
  type: "BatchNorm"
  bottom: "cp2"
  top: "cp2_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "relu_cp2"
  type: "ReLU"
  bottom: "cp2_bn"
  top: "cp2_bn"
}

layer {
  name: "L2"
  type: "Convolution"
  bottom: "cp2_bn"
  top: "L2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L2_bn"
  type: "BatchNorm"
  bottom: "L2"
  top: "L2_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu3"
  type: "ReLU"
  bottom: "L2_bn"
  top: "L2_bn"
}


layer {
  name: "L3"
  type: "Convolution"
  bottom: "L2_bn"
  top: "L3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L3_bn"
  type: "BatchNorm"
  bottom: "L3"
  top: "L3_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu4"
  type: "ReLU"
  bottom: "L3_bn"
  top: "L3_bn"
}


layer {
  name: "L4"
  type: "Convolution"
  bottom: "L3_bn"
  top: "L4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L4_bn"
  type: "BatchNorm"
  bottom: "L4"
  top: "L4_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "L4_bn"
  top: "L4_bn"
}


layer {
  name: "cp5"
  type: "Convolution"
  bottom: "L4_bn"
  top: "cp5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "cp5_bn"
  type: "BatchNorm"
  bottom: "cp5"
  top: "cp5_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "relu_cp5"
  type: "ReLU"
  bottom: "cp5_bn"
  top: "cp5_bn"
}


layer {
  name: "L5"
  type: "Convolution"
  bottom: "cp5_bn"
  top: "L5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 5
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L5_bn"
  type: "BatchNorm"
  bottom: "L5"
  top: "L5_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "L5_bn"
  top: "L5_bn"
}

layer {
  name: "L6"
  type: "Convolution"
  bottom: "L5_bn"
  top: "L6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "L6_bn"
  type: "BatchNorm"
  bottom: "L6"
  top: "L6_bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.9
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu7"
  type: "ReLU"
  bottom: "L6_bn"
  top: "L6_bn"
}

layer {
  name: "bb-output"
  type: "Convolution"
  bottom: "L6_bn"
  top: "bb-output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "pixel-conv"
  type: "Convolution"
  bottom: "L6_bn"
  top: "pixel-conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "pixel-tile"
  type: "GSTiling"
  bottom: "pixel-conv"
  top: "pixel-conv-tiled"
  gs_tiling_param {
    stride: 8
    reverse: true
  }
}

layer {
  name: "bb-tile"
  type: "GSTiling"
  bottom: "bb-output"
  top: "bb-output-tiled"
  gs_tiling_param {
    stride: 8
    reverse: true
  }
}

# Pixel level softmax loss.
layer {
  name: "pixel-loss"
  type: "SoftmaxWithLoss"
  bottom: "pixel-conv-tiled"
  bottom: "pixel-label"
  top: "pixel-loss"
  loss_param {
    ignore_label: 2
  }
  loss_weight: 10
}

# Masking the bounding boxes with input label.
layer {
  name: "bb-size-normalization"
  type: "Eltwise"
  bottom: "bb-output-tiled"
  bottom: "size-block"
  top: "bb-masked-output-sn"
  eltwise_param {
    operation: PROD
  }
}

layer {
  name: "bb-num-pixel-normalization"
  type: "Eltwise"
  bottom: "bb-masked-output-sn"
  bottom: "norm-block"
  top: "bb-masked-output-sn-nn"
  eltwise_param {
    operation: PROD
  }
}

layer {
  name: "bb-loss"
  type: "L1Loss"
  bottom: "bb-masked-output-sn-nn"
  bottom: "bb-label-sn-nn"
  top: "bb-loss"
  loss_weight: 1.0
}


